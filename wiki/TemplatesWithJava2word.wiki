#labels Featured
#This page shows how to use templates with Java2word.

= Introduction =

This page shows how to use templates with Java2word. Issue 26.


= Creating the Template =

  * Create your template in MS Word
  * Add your place holders. Recommended to use camel case. Eg.:
phCompanyName

Don't use "ph_company_name" because MS Word breaks it down in many "runs" and you won't be able to replace. 

  * Save it as "Microsoft Word 2003 - XML"


= Getting your hands dirty = 

Now that you have your template, it is time to do the replacement.

I will copy and past a code snippet from the class /j2w-ejb/src/test/java/word/w2004/template/TemplateTest.java:  

{{{
    @Test
    public void testTemplate() {
        String xmlTemplate = Utils.readFile("src/test/resources/ReleaseNotesTemplate.doc");
        
        xmlTemplate = replacePh(xmlTemplate, "phCompanyName", "EasyWorld - coding for fun pty");
        xmlTemplate = replacePh(xmlTemplate, "phEnv", "Production");
        xmlTemplate = replacePh(xmlTemplate, "phVersion", "1.0 beta");
        xmlTemplate = replacePh(xmlTemplate, "phProjectLeader", "Leonardo Correa");
        
        Table tbl = new Table();
        tbl.addTableEle(TableEle.TH, "Jira Number", "Description");

        tbl.addTableEle(TableEle.TD, "J2W-1234", "Read Templates nicelly");
        tbl.addTableEle(TableEle.TD, "J2W-9999", "Make Java2word funky!!!");

        xmlTemplate = replacePh(xmlTemplate, "phTableIssues", tbl.getContent());
        
        Paragraph p01 = Paragraph.with("1) Stop the server").create();
        Paragraph p02 = Paragraph.with("2) Run the script to deploy the app xxx").create();
        Paragraph p03 = Paragraph.with("3) Start the server").create();
        Paragraph p04 = Paragraph.with("4) Hope for the best").create();
        
        String instructions = p01.getContent() + p02.getContent() + p03.getContent() + p04.getContent();
        
        //Workaround: phInstructions is already inside a 'text' fragment. 
        //If you know the template, you can remove the whole element and add all Paragraphs
        //* Table above doesn't need workaround because table can be normally inside a paragraph.
        xmlTemplate = replacePh(xmlTemplate, "<w:t>phInstructions</w:t>", instructions); 
        
        xmlTemplate = replacePh(xmlTemplate, "phDateTime", new Date().toString());
        
        TestUtils.createLocalDoc(xmlTemplate);        
    }
}}}


The code above takes this [ReleaseNotesTemplate.doc template] and produces this result [templateResult.doc here.]


the method *replacePh()* is very simple but important at the same time. It replaces but prints a warning message when can't find the place holder. If you see this "warning" messages it means that your template has got some "breakdown" text and you may have to manually fix your template by editing the template as XML.  

Also see the comment about the workaround. Table can comfortably be inside a paragraph. But you can not have one '<w:t>' inside other. What I do is remove the whole element and replace with many paragraphs.

*This is is obviously a huge workaround but this API is already a workaround itself.... hehehehe  - it doesn't bother me at all... this is the "jeitinho brasileiro"*      


Have a try, create an issue if you have any suggestion or problem. 

thanks for using Java2word.



cheers

Leonardo